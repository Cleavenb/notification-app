<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notification Control Simulation</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f2f5; /* Light gray background */
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
        }
        .container {
            background-color: #ffffff;
            border-radius: 16px; /* More rounded corners */
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1); /* Softer shadow */
            padding: 32px;
            text-align: center;
            max-width: 400px;
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: 24px;
        }
        .button {
            padding: 14px 24px;
            border-radius: 12px; /* Rounded buttons */
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }
        .button:active {
            transform: translateY(0);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        .on-button {
            background-color: #4CAF50; /* Green */
            color: white;
        }
        .off-button {
            background-color: #F44336; /* Red */
            color: white;
        }
        .status-message {
            font-size: 1.25rem; /* Larger font for status */
            font-weight: 600;
            color: #333;
            margin-top: 16px;
        }
        /* Responsive adjustments */
        @media (max-width: 600px) {
            .container {
                padding: 24px;
                gap: 16px;
            }
            .button {
                font-size: 1rem;
                padding: 12px 20px;
            }
            .status-message {
                font-size: 1.1rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-2xl font-bold text-gray-800">Notification Control</h1>

        <p class="status-message" id="notificationStatus">Notifications are currently: ON</p>

        <button id="turnOffBtn" class="button off-button">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.04 5.455 1.31m5.714 0a24.246 24.246 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
            </svg>
            Turn Off Notifications
        </button>

        <button id="turnOnBtn" class="button on-button">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9.143 17.082a23.848 23.848 0 00-5.454-1.31A8.967 8.967 0 016 9.75V9A6 6 0 0118 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.04 5.455 1.31m-5.714 0a24.246 24.246 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
            </svg>
            Turn On Notifications
        </button>
    </div>

    <script>
        // Get references to the elements
        const turnOffBtn = document.getElementById('turnOffBtn');
        const turnOnBtn = document.getElementById('turnOnBtn');
        const notificationStatus = document.getElementById('notificationStatus');

        // Initial state
        let notificationsEnabled = true; // Simulate initial state as ON

        // Function to update the status message
        function updateStatus() {
            if (notificationsEnabled) {
                notificationStatus.textContent = 'Notifications are currently: ON';
                notificationStatus.style.color = '#4CAF50'; // Green for ON
            } else {
                notificationStatus.textContent = 'Notifications are currently: OFF';
                notificationStatus.style.color = '#F44336'; // Red for OFF
            }
        }

        // Event listener for the "Turn Off" button
        turnOffBtn.addEventListener('click', () => {
            notificationsEnabled = false;
            updateStatus();
            console.log("Notifications turned OFF (simulated)");
        });

        // Event listener for the "Turn On" button
        turnOnBtn.addEventListener('click', () => {
            notificationsEnabled = true;
            updateStatus();
            console.log("Notifications turned ON (simulated)");
        });

        // Initialize the status display on page load
        window.onload = updateStatus;
    </script>
</body>
</html>
